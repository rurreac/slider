name: Test and Lint on PR

on:
  pull_request:
    branches: [ master, main ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
      
      - name: Display Go version
        run: go version
      
      - name: Install dependencies
        run: go mod download
      
      - name: Run tests
        id: test
        run: |
          go test -v ./...
          echo "exit_code=$?" >> $GITHUB_OUTPUT
      
      - name: Report test results
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const testExitCode = process.env.TEST_EXIT_CODE === '0' ? true : false;
            
            if (!testExitCode) {
              const { owner, repo, number } = context.issue;
              
              github.rest.issues.createComment({
                owner,
                repo,
                issue_number: number,
                body: `❌ Tests failed. Please check the logs for details.`
              });
              
              core.setFailed('Tests failed');
            }
        env:
          TEST_EXIT_CODE: ${{ steps.test.outputs.exit_code || '0' }}

  lint:
    name: Run Linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
      
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest
          args: --timeout=5m
      
  build:
    name: Verify Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
      
      - name: Build
        run: go build -v ./...
        
  pr-status:
    name: PR Status
    needs: [test, lint, build]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Check test and lint status
        uses: actions/github-script@v7
        with:
          script: |
            const testStatus = '${{ needs.test.result }}' === 'success';
            const lintStatus = '${{ needs.lint.result }}' === 'success';
            const buildStatus = '${{ needs.build.result }}' === 'success';
            
            if (testStatus && lintStatus && buildStatus) {
              const { owner, repo, number } = context.issue;
              
              github.rest.issues.createComment({
                owner,
                repo,
                issue_number: number,
                body: `✅ All checks passed successfully! Ready to merge.`
              });
            } else {
              core.setFailed('One or more checks failed');
            }
